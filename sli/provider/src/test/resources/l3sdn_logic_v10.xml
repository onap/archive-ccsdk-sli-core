<?xml version="1.0" encoding="UTF-8"?>
<!-- ============LICENSE_START=======================================================
    ONAP : CCSDK ================================================================================
    Copyright (C) 2017 AT&T Intellectual Property. All rights reserved. ================================================================================
    Licensed under the Apache License, Version 2.0 (the "License"); you may not
    use this file except in compliance with the License. You may obtain a copy
    of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required
    by applicable law or agreed to in writing, software distributed under the
    License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS
    OF ANY KIND, either express or implied. See the License for the specific
    language governing permissions and limitations under the License. ============LICENSE_END========================================================= -->


<service-logic xmlns="http://www.onap.org/sdnc/svclogic"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.onap.org/sdnc/svclogic ./svclogic.xsd"
    module="neutron" version="1.0.0">

    <method rpc="canCreateNetwork" mode="sync">
        <return status="success">
            <parameter name="error-code" value="200" />
        </return>
    </method>

    <method rpc="switchTester" mode="sync">

        <switch test="`$test-value`">
            <outcome value="">
                <return status="success">
                    <parameter name="visited-outcome" value="empty string" />
                </return>
            </outcome>
            <outcome value="Other">
                <return status="success">
                    <parameter name="visited-outcome" value="Other" />
                </return>
            </outcome>
        </switch>


    </method>

    <method rpc="forRecordTester" mode="sync">
        <for index="i" start="0" end="1">
            <record plugin="org.onap.ccsdk.sli.core.sli.provider.DummyRecorder">
                <parameter name="level" value="INFO"/>
                <parameter name="field1" value="`forRecordTester message $i`"/>
            </record>
        </for>
    </method>

    <method rpc="resourceTester" mode="sync">
        <block>
            <set>
                <parameter name='resource-plugin'
                    value='org.onap.ccsdk.sli.core.sli.provider.DummyResource' />
            </set>

            <save plugin="`$resource-plugin`" resource="sample" key="sample-key == 'resourceTester.status'">
               <parameter name="sample-key" value="resourceTester.status"/>
               <parameter name="sample-value" value="FAILED"/>
            </save>

            <update plugin="`$resource-plugin`" resource="sample" key="sample-key == 'resourceTester.status'">
               <parameter name="sample-key" value="resourceTester.status"/>
               <parameter name="sample-value" value="PASSED"/>
            </update>

            <get-resource plugin="`$resource-plugin`" resource="sample" key="sample-key == 'resourceTester.status'" pfx="sample"/>

            <exists plugin="`$resource-plugin`" resource="sample" key="sample-key == 'resourceTester.status'"/>

            <is-available plugin="`$resource-plugin`" resource="sample" key="sample-key == 'resourceTester.status'"/>

            <reserve plugin="`$resource-plugin`" resource="sample" key="sample-key == 'resourceTester.status'"/>

            <release plugin="`$resource-plugin`" resource="sample" key="sample-key == 'resourceTester.status'"/>


            <reserve plugin="`$resource-plugin`" resource="sample" key="sample-key == 'resourceTester.status'"/>

            <notify plugin="`$resource-plugin`" resource="sample" action="RESERVE"/>

            <delete plugin="`$resource-plugin`" resource="sample" key="sample-key == 'resourceTester.status'"/>



        </block>
    </method>

    <method rpc="configureTester" mode="sync">
        <block>
            <set>
                <parameter name='configure-plugin'
                    value='org.onap.ccsdk.sli.core.sli.provider.DummyAdaptor' />
            </set>
            <configure adaptor="`$configure-plugin`" key="dummy" activate="true">
                <parameter name="field1" value="1"/>
            </configure>
            <configure adaptor="`$configure-plugin`" key="SUCCESS" activate="true">
                <parameter name="field1" value="1"/>
            </configure>
            <configure adaptor="`$configure-plugin`" key="ALREADY_ACTIVE" activate="true">
                <parameter name="field1" value="1"/>
            </configure>
            <configure adaptor="`$configure-plugin`" key="NOT_FOUND" activate="true">
                <parameter name="field1" value="1"/>
            </configure>
            <configure adaptor="`$configure-plugin`" key="NOT_READY" activate="true">
                <parameter name="field1" value="1"/>
            </configure>
            <configure adaptor="`$configure-plugin`" key="FAILURE" activate="true">
                <parameter name="field1" value="1"/>
            </configure>
            <configure adaptor="`$configure-plugin`" key="dummy" activate="false">
                <parameter name="field1" value="1"/>
            </configure>
            <configure adaptor="`$configure-plugin`" key="SUCCESS" activate="false">
                <parameter name="field1" value="1"/>
            </configure>
            <configure adaptor="`$configure-plugin`" key="ALREADY_ACTIVE" activate="false">
                <parameter name="field1" value="1"/>
            </configure>
            <configure adaptor="`$configure-plugin`" key="NOT_FOUND" activate="false">
                <parameter name="field1" value="1"/>
            </configure>
            <configure adaptor="`$configure-plugin`" key="NOT_READY" activate="false">
                <parameter name="field1" value="1"/>
            </configure>
            <configure adaptor="`$configure-plugin`" key="FAILURE" activate="false">
                <parameter name="field1" value="1"/>
            </configure>

       </block>
    </method>


    <method rpc="javaPluginTester" mode="sync">
        <block>
            <set>
                <parameter name='java-plugin'
                    value='org.onap.ccsdk.sli.core.sli.provider.VoidDummyPlugin' />
            </set>
            <execute plugin="`$java-plugin`" method="dummy"/>
       </block>
    </method>

    <method rpc="allNodesTester" mode="sync">
        <block>
            <set>
                <parameter name='resource-plugin'
                    value='org.onap.ccsdk.sli.core.sli.provider.DummyResource' />
                <parameter name='configure-plugin'
                    value='org.onap.ccsdk.sli.core.sli.provider.DummyAdaptor' />
                <parameter name='java-plugin'
                    value='org.onap.ccsdk.sli.core.sli.provider.VoidDummyPlugin' />

            </set>

            <call rpc="switchTester" mode="sync" />

            <call rpc="forRecordTester" mode="sync"/>

            <call rpc="resourceTester" mode="sync"/>

            <call rpc="configureTester" mode="sync"/>

            <call rpc="javaPluginTester" mode="sync"/>

        </block>
    </method>

    <method rpc="networkCreated" mode="sync">
        <switch
            test="length($network.segment[0].provider-physical-network) >= 5 and substr($network.segment[0].provider-physical-network,0,5) == 'dvspg'">
            <outcome value="true">
                <block>
                    <set>
                        <parameter name="$vlanlist"
                            value="$network.segment[0].provider-segmentation-id" />
                    </set>
                    <for index="i" start="1" end="$network.num-segments">
                        <set>
                            <parameter name="$vlanlist"
                                value="eval($vlanlist+','+$network.segment[i].provider-segmentation-id)" />
                        </set>
                    </for>

                </block>
            </outcome>
            <outcome value="Other">
                <return status="success">
                    <parameter name="error-code" value="200" />
                </return>
            </outcome>
        </switch>
    </method>

</service-logic>
